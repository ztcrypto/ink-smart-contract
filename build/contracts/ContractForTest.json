{
  "contractName": "ContractForTest",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "changeManager",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_pledgor",
          "type": "address"
        }
      ],
      "name": "returnCoins",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "Obtain",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Return",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousManager",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPledgeIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastElementNumber",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60606040526040805190810160405280600981526020017f494e4b20546f6b656e00000000000000000000000000000000000000000000008152506005908051906020019062000051929190620001fa565b506040805190810160405280600381526020017f494e4b0000000000000000000000000000000000000000000000000000000000815250600690805190602001906200009f929190620001fa565b506040805190810160405280600381526020017f312e30000000000000000000000000000000000000000000000000000000000081525060079080519060200190620000ed929190620001fa565b506005600860006101000a81548163ffffffff021916908363ffffffff1602179055507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60008190555073ca35b7d915458ef540ade6068dfe2f44e8fa733c600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005460016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620002a9565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200023d57805160ff19168380011785556200026e565b828001600101855582156200026e579182015b828111156200026d57825182559160200191906001019062000250565b5b5090506200027d919062000281565b5090565b620002a691905b80821115620002a257600081600090555060010162000288565b5090565b90565b611f0a80620002b96000396000f300606060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461010c578063086a2c381461019a578063095ea7b3146101c357806318160ddd1461021d57806323b872dd146102465780632dfa38e5146102bf578063313ce567146102e8578063481c6a751461031d57806354fd4d5014610372578063661884631461040057806370a082311461045a5780637e186f00146104a757806395d89b41146104d0578063a3fbbaae1461055e578063a9059cbb14610597578063d0febe4c146105f1578063d73dd623146105fb578063dd62ed3e14610655578063fe77b51a146106c1575b600080fd5b341561011757600080fd5b61011f610712565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015f578082015181840152602081019050610144565b50505050905090810190601f16801561018c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101a557600080fd5b6101ad6107b0565b6040518082815260200191505060405180910390f35b34156101ce57600080fd5b610203600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506107fd565b604051808215151515815260200191505060405180910390f35b341561022857600080fd5b6102306108ef565b6040518082815260200191505060405180910390f35b341561025157600080fd5b6102a5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506108f5565b604051808215151515815260200191505060405180910390f35b34156102ca57600080fd5b6102d2610cb4565b6040518082815260200191505060405180910390f35b34156102f357600080fd5b6102fb610d64565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b341561032857600080fd5b610330610d7a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561037d57600080fd5b610385610da0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103c55780820151818401526020810190506103aa565b50505050905090810190601f1680156103f25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561040b57600080fd5b610440600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610e3e565b604051808215151515815260200191505060405180910390f35b341561046557600080fd5b610491600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110cf565b6040518082815260200191505060405180910390f35b34156104b257600080fd5b6104ba611118565b6040518082815260200191505060405180910390f35b34156104db57600080fd5b6104e3611162565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610523578082015181840152602081019050610508565b50505050905090810190601f1680156105505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561056957600080fd5b610595600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611200565b005b34156105a257600080fd5b6105d7600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506113c4565b604051808215151515815260200191505060405180910390f35b6105f96115e8565b005b341561060657600080fd5b61063b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611612565b604051808215151515815260200191505060405180910390f35b341561066057600080fd5b6106ab600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061180e565b6040518082815260200191505060405180910390f35b34156106cc57600080fd5b6106f8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611895565b604051808215151515815260200191505060405180910390f35b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107a85780601f1061077d576101008083540402835291602001916107a8565b820191906000526020600020905b81548152906001019060200180831161078b57829003601f168201915b505050505081565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050905090565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561093257600080fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561098057600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610a0b57600080fd5b610a5d82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118a790919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610af282600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c090919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bc482600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118a790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905003815481101515610d4d57fe5b906000526020600020906002020160010154905090565b600860009054906101000a900463ffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e365780601f10610e0b57610100808354040283529160200191610e36565b820191906000526020600020905b815481529060010190602001808311610e1957829003601f168201915b505050505081565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610f4f576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fe3565b610f6283826118a790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111f85780601f106111cd576101008083540402835291602001916111f8565b820191906000526020600020905b8154815290600101906020018083116111db57829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561125c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561129857600080fd5b6113038160016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113c4565b508073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a435060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561140157600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561144f57600080fd5b6114a182600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118a790919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061153682600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c090919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b61160f33600860009054906101000a900463ffffffff16600a0a63ffffffff1634026118de565b50565b60006116a382600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006118a082611b52565b9050919050565b60008282111515156118b557fe5b818303905092915050565b60008082840190508381101515156118d457fe5b8091505092915050565b60008082141515156118ef57600080fd5b6119638260016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118a790919063ffffffff16565b60016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a1a82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c090919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806001018281611ab19190611e7d565b91600052602060002090600202016000604080519081016040528042815260200134815250909190915060008201518160000155602082015181600101555050508273ffffffffffffffffffffffffffffffffffffffff167f71a647ee6065fdd15b432c1a137ccc66bb52fce997830e09eb6db027618277db8342604051808381526020018281526020019250505060405180910390a26001905092915050565b6000806000809150600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490505b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050811015611e7357426202a300600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010183815481101515611c4157fe5b906000526020600020906002020160000154011015611e61578373ffffffffffffffffffffffffffffffffffffffff166108fc600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010183815481101515611cc357fe5b9060005260206000209060020201600101549081150290604051600060405180830381858888f1935050505050600191508373ffffffffffffffffffffffffffffffffffffffff167f856f08fd8b1f8120c97ade66df997556a2bb7bf9fc1317edc99188d8585af9eb600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010183815481101515611d7b57fe5b9060005260206000209060020201600101546040518082815260200191505060405180910390a2600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181815481101515611df157fe5b90600052602060002090600202016000808201600090556001820160009055505060018101600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550611e66565b611e73565b8080600101915050611ba0565b8192505050919050565b815481835581811511611eaa57600202816002028360005260206000209182019101611ea99190611eaf565b5b505050565b611edb91905b80821115611ed757600080820160009055600182016000905550600201611eb5565b5090565b905600a165627a7a7230582046b55cc9b02c66d5ae82eba43ddcfe8f17f686cd5d5e08ecb32f6fd347f386500029",
  "deployedBytecode": "0x606060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461010c578063086a2c381461019a578063095ea7b3146101c357806318160ddd1461021d57806323b872dd146102465780632dfa38e5146102bf578063313ce567146102e8578063481c6a751461031d57806354fd4d5014610372578063661884631461040057806370a082311461045a5780637e186f00146104a757806395d89b41146104d0578063a3fbbaae1461055e578063a9059cbb14610597578063d0febe4c146105f1578063d73dd623146105fb578063dd62ed3e14610655578063fe77b51a146106c1575b600080fd5b341561011757600080fd5b61011f610712565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015f578082015181840152602081019050610144565b50505050905090810190601f16801561018c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101a557600080fd5b6101ad6107b0565b6040518082815260200191505060405180910390f35b34156101ce57600080fd5b610203600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506107fd565b604051808215151515815260200191505060405180910390f35b341561022857600080fd5b6102306108ef565b6040518082815260200191505060405180910390f35b341561025157600080fd5b6102a5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506108f5565b604051808215151515815260200191505060405180910390f35b34156102ca57600080fd5b6102d2610cb4565b6040518082815260200191505060405180910390f35b34156102f357600080fd5b6102fb610d64565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b341561032857600080fd5b610330610d7a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561037d57600080fd5b610385610da0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103c55780820151818401526020810190506103aa565b50505050905090810190601f1680156103f25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561040b57600080fd5b610440600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610e3e565b604051808215151515815260200191505060405180910390f35b341561046557600080fd5b610491600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110cf565b6040518082815260200191505060405180910390f35b34156104b257600080fd5b6104ba611118565b6040518082815260200191505060405180910390f35b34156104db57600080fd5b6104e3611162565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610523578082015181840152602081019050610508565b50505050905090810190601f1680156105505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561056957600080fd5b610595600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611200565b005b34156105a257600080fd5b6105d7600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506113c4565b604051808215151515815260200191505060405180910390f35b6105f96115e8565b005b341561060657600080fd5b61063b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611612565b604051808215151515815260200191505060405180910390f35b341561066057600080fd5b6106ab600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061180e565b6040518082815260200191505060405180910390f35b34156106cc57600080fd5b6106f8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611895565b604051808215151515815260200191505060405180910390f35b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107a85780601f1061077d576101008083540402835291602001916107a8565b820191906000526020600020905b81548152906001019060200180831161078b57829003601f168201915b505050505081565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050905090565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561093257600080fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561098057600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610a0b57600080fd5b610a5d82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118a790919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610af282600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c090919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bc482600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118a790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905003815481101515610d4d57fe5b906000526020600020906002020160010154905090565b600860009054906101000a900463ffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e365780601f10610e0b57610100808354040283529160200191610e36565b820191906000526020600020905b815481529060010190602001808311610e1957829003601f168201915b505050505081565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610f4f576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fe3565b610f6283826118a790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111f85780601f106111cd576101008083540402835291602001916111f8565b820191906000526020600020905b8154815290600101906020018083116111db57829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561125c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561129857600080fd5b6113038160016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113c4565b508073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a435060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561140157600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561144f57600080fd5b6114a182600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118a790919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061153682600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c090919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b61160f33600860009054906101000a900463ffffffff16600a0a63ffffffff1634026118de565b50565b60006116a382600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006118a082611b52565b9050919050565b60008282111515156118b557fe5b818303905092915050565b60008082840190508381101515156118d457fe5b8091505092915050565b60008082141515156118ef57600080fd5b6119638260016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118a790919063ffffffff16565b60016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a1a82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118c090919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806001018281611ab19190611e7d565b91600052602060002090600202016000604080519081016040528042815260200134815250909190915060008201518160000155602082015181600101555050508273ffffffffffffffffffffffffffffffffffffffff167f71a647ee6065fdd15b432c1a137ccc66bb52fce997830e09eb6db027618277db8342604051808381526020018281526020019250505060405180910390a26001905092915050565b6000806000809150600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490505b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050811015611e7357426202a300600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010183815481101515611c4157fe5b906000526020600020906002020160000154011015611e61578373ffffffffffffffffffffffffffffffffffffffff166108fc600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010183815481101515611cc357fe5b9060005260206000209060020201600101549081150290604051600060405180830381858888f1935050505050600191508373ffffffffffffffffffffffffffffffffffffffff167f856f08fd8b1f8120c97ade66df997556a2bb7bf9fc1317edc99188d8585af9eb600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010183815481101515611d7b57fe5b9060005260206000209060020201600101546040518082815260200191505060405180910390a2600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181815481101515611df157fe5b90600052602060002090600202016000808201600090556001820160009055505060018101600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550611e66565b611e73565b8080600101915050611ba0565b8192505050919050565b815481835581811511611eaa57600202816002028360005260206000209182019101611ea99190611eaf565b5b505050565b611edb91905b80821115611ed757600080820160009055600182016000905550600201611eb5565b5090565b905600a165627a7a7230582046b55cc9b02c66d5ae82eba43ddcfe8f17f686cd5d5e08ecb32f6fd347f386500029",
  "sourceMap": "54:411:1:-;;;239:18:4;;;;;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;:::i;:::-;;267:14;;;;;;;;;;;;;;;;;;:6;:14;;;;;;;;;;;;:::i;:::-;;291:15;;;;;;;;;;;;;;;;;;:7;:15;;;;;;;;;;;;:::i;:::-;;327:1;316:8;;:12;;;;;;;;;;;;;;;;;;352:10;338:11;:24;;;;382:42;372:7;;:52;;;;;;;;;;;;;;;;;;454:11;;434:8;:17;443:7;;;;;;;;;;;434:17;;;;;;;;;;;;;;;:31;;;;54:411:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "54:411:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1687:8:8;;;101:18:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;349:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:187:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;178:444:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;205:140:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;181:22:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47::5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;153:21:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1241:408:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;516:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;100:101:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;126:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;704:228:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;189:320:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;482:106:4;;;;;;968:268:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;594:104:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;101:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;349:113:1:-;406:7;427:6;:18;434:10;427:18;;;;;;;;;;;;;;;:23;;:30;;;;420:37;;349:113;:::o;628:187:8:-;695:4;740:6;708:7;:19;716:10;708:19;;;;;;;;;;;;;;;:29;728:8;708:29;;;;;;;;;;;;;;;:38;;;;774:8;753:38;;762:10;753:38;;;784:6;753:38;;;;;;;;;;;;;;;;;;805:4;798:11;;628:187;;;;:::o;51:26:3:-;;;;:::o;178:444:8:-;260:4;295:1;280:17;;:3;:17;;;;272:26;;;;;;;;322:8;:15;331:5;322:15;;;;;;;;;;;;;;;;312:6;:25;;304:34;;;;;;;;362:7;:14;370:5;362:14;;;;;;;;;;;;;;;:26;377:10;362:26;;;;;;;;;;;;;;;;352:6;:36;;344:45;;;;;;;;414:27;434:6;414:8;:15;423:5;414:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;396:8;:15;405:5;396:15;;;;;;;;;;;;;;;:45;;;;464:25;482:6;464:8;:13;473:3;464:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;448:8;:13;457:3;448:13;;;;;;;;;;;;;;;:41;;;;525:38;556:6;525:7;:14;533:5;525:14;;;;;;;;;;;;;;;:26;540:10;525:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;496:7;:14;504:5;496:14;;;;;;;;;;;;;;;:26;511:10;496:26;;;;;;;;;;;;;;;:67;;;;586:3;570:28;;579:5;570:28;;;591:6;570:28;;;;;;;;;;;;;;;;;;612:4;605:11;;178:444;;;;;:::o;205:140:1:-;255:7;276:6;:18;283:10;276:18;;;;;;;;;;;;;;;:23;;331:1;300:6;:18;307:10;300:18;;;;;;;;;;;;;;;:23;;:30;;;;:32;276:57;;;;;;;;;;;;;;;;;;;;:64;;;269:71;;205:140;:::o;181:22:4:-;;;;;;;;;;;;;:::o;47::5:-;;;;;;;;;;;;;:::o;153:21:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1241:408:8:-;1325:12;1345:13;1361:7;:19;1369:10;1361:19;;;;;;;;;;;;;;;:29;1381:8;1361:29;;;;;;;;;;;;;;;;1345:45;;1420:8;1401:16;:27;1397:164;;;1470:1;1438:7;:19;1446:10;1438:19;;;;;;;;;;;;;;;:29;1458:8;1438:29;;;;;;;;;;;;;;;:33;;;;1397:164;;;1524:30;1537:16;1524:8;:12;;:30;;;;:::i;:::-;1492:7;:19;1500:10;1492:19;;;;;;;;;;;;;;;:29;1512:8;1492:29;;;;;;;;;;;;;;;:62;;;;1397:164;1587:8;1566:61;;1575:10;1566:61;;;1597:7;:19;1605:10;1597:19;;;;;;;;;;;;;;;:29;1617:8;1597:29;;;;;;;;;;;;;;;;1566:61;;;;;;;;;;;;;;;;;;1640:4;1633:11;;1241:408;;;;;:::o;516:105:0:-;576:7;599:8;:16;608:6;599:16;;;;;;;;;;;;;;;;592:23;;516:105;;;:::o;100:101:1:-;151:7;172:6;:18;179:10;172:18;;;;;;;;;;;;;;;:24;;;165:31;;100:101;:::o;126:20:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;704:228::-;213:7:5;;;;;;;;;;;199:21;;:10;:21;;;191:30;;;;;;;;804:1:4;782:24;;:10;:24;;;;774:33;;;;;;;;815:39;824:10;836:8;:17;845:7;;;;;;;;;;;836:17;;;;;;;;;;;;;;;;815:8;:39::i;:::-;;886:10;862:35;;877:7;;;;;;;;;;;862:35;;;;;;;;;;;;915:10;905:7;;:20;;;;;;;;;;;;;;;;;;704:228;:::o;189:320:0:-;252:4;287:1;272:17;;:3;:17;;;;264:26;;;;;;;;314:8;:20;323:10;314:20;;;;;;;;;;;;;;;;304:6;:30;;296:39;;;;;;;;365:32;390:6;365:8;:20;374:10;365:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;342:8;:20;351:10;342:20;;;;;;;;;;;;;;;:55;;;;420:25;438:6;420:8;:13;429:3;420:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;404:8;:13;413:3;404:13;;;;;;;;;;;;;;;:41;;;;473:3;452:33;;461:10;452:33;;;478:6;452:33;;;;;;;;;;;;;;;;;;499:4;492:11;;189:320;;;;:::o;482:106:4:-;530:51;546:10;572:8;;;;;;;;;;;568:2;:12;558:22;;:9;:22;530:15;:51::i;:::-;;482:106::o;968:268:8:-;1047:12;1099:46;1133:11;1099:7;:19;1107:10;1099:19;;;;;;;;;;;;;;;:29;1119:8;1099:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;1067:7;:19;1075:10;1067:19;;;;;;;;;;;;;;;:29;1087:8;1067:29;;;;;;;;;;;;;;;:78;;;;1172:8;1151:61;;1160:10;1151:61;;;1182:7;:19;1190:10;1182:19;;;;;;;;;;;;;;;:29;1202:8;1182:29;;;;;;;;;;;;;;;;1151:61;;;;;;;;;;;;;;;;;;1226:4;1219:11;;968:268;;;;:::o;820:142::-;898:17;931:7;:15;939:6;931:15;;;;;;;;;;;;;;;:25;947:8;931:25;;;;;;;;;;;;;;;;924:32;;820:142;;;;:::o;594:104:4:-;649:4;671:20;682:8;671:10;:20::i;:::-;664:27;;594:104;;;:::o;310:112:7:-;368:7;395:1;390;:6;;383:14;;;;;;415:1;411;:5;404:12;;310:112;;;;:::o;429:126::-;487:7;503:9;519:1;515;:5;503:17;;534:1;529;:6;;522:14;;;;;;549:1;542:8;;429:126;;;;;:::o;446:341:6:-;519:4;550:1;539:7;:12;;531:21;;;;;;;;578:30;600:7;578:8;:17;587:7;;;;;;;;;;;578:17;;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;558:8;:17;567:7;;;;;;;;;;;558:17;;;;;;;;;;;;;;;:50;;;;630:26;648:7;630:8;:13;639:3;630:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;614:8;:13;623:3;614:13;;;;;;;;;;;;;;;:42;;;;662:6;:18;669:10;662:18;;;;;;;;;;;;;;;:23;;:72;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;691:42;;;;;;;;;709:3;691:42;;;;722:9;691:42;;;662:72;;;;;;;;;;;;;;;;;;;;;;;;747:3;740:25;;;752:7;761:3;740:25;;;;;;;;;;;;;;;;;;;;;;;;778:4;771:11;;446:341;;;;:::o;793:551::-;849:4;861:11;890:9;875:5;861:19;;902:6;:16;909:8;902:16;;;;;;;;;;;;;;;:22;;;890:34;;886:435;930:6;:16;937:8;930:16;;;;;;;;;;;;;;;:21;;:28;;;;926:1;:32;886:435;;;1018:3;1009:6;977;:16;984:8;977:16;;;;;;;;;;;;;;;:21;;999:1;977:24;;;;;;;;;;;;;;;;;;;;:29;;;:38;:44;974:341;;;1036:8;:13;;:46;1050:6;:16;1057:8;1050:16;;;;;;;;;;;;;;;:21;;1072:1;1050:24;;;;;;;;;;;;;;;;;;;;:31;;;1036:46;;;;;;;;;;;;;;;;;;;;;;;;1105:4;1096:13;;1130:8;1123:48;;;1139:6;:16;1146:8;1139:16;;;;;;;;;;;;;;;:21;;1161:1;1139:24;;;;;;;;;;;;;;;;;;;;:31;;;1123:48;;;;;;;;;;;;;;;;;;1192:6;:16;1199:8;1192:16;;;;;;;;;;;;;;;:21;;1214:1;1192:24;;;;;;;;;;;;;;;;;;;;;1185:31;;;;;;;;;;;;;;1259:1;1255;:5;1230:6;:16;1237:8;1230:16;;;;;;;;;;;;;;;:22;;:30;;;;974:341;;;1299:5;;974:341;960:3;;;;;;;886:435;;;1333:6;1326:13;;793:551;;;;;:::o;54:411:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\n\nimport \"./INKToken.sol\";\n\n\ncontract ContractForTest is INKToken {\n    \n  function getPledgeIndex() public constant returns (uint256){\n    return pledge[msg.sender].index;\n  }\n\n  function getLastAmount() public constant returns (uint256){\n    return pledge[msg.sender].vect[pledge[msg.sender].vect.length-1].amount;\n  }\n\n  function getLastElementNumber() public constant returns (uint256){\n    return pledge[msg.sender].vect.length;\n  }\n\n}",
  "sourcePath": "/home/satchel/INK/contracts/ContractForTest.sol",
  "ast": {
    "absolutePath": "/home/satchel/INK/contracts/ContractForTest.sol",
    "exportedSymbols": {
      "ContractForTest": [
        138
      ]
    },
    "id": 139,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 87,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/home/satchel/INK/contracts/INKToken.sol",
        "file": "./INKToken.sol",
        "id": 88,
        "nodeType": "ImportDirective",
        "scope": 139,
        "sourceUnit": 322,
        "src": "27:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 89,
              "name": "INKToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 321,
              "src": "82:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INKToken_$321",
                "typeString": "contract INKToken"
              }
            },
            "id": 90,
            "nodeType": "InheritanceSpecifier",
            "src": "82:8:1"
          }
        ],
        "contractDependencies": [
          85,
          181,
          210,
          321,
          343,
          532,
          879
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 138,
        "linearizedBaseContracts": [
          138,
          321,
          532,
          343,
          879,
          85,
          181,
          210
        ],
        "name": "ContractForTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "159:42:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "pledge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "172:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$376_storage_$",
                          "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                        }
                      },
                      "id": 98,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 96,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "179:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "179:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "172:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PledgeVector_$376_storage",
                        "typeString": "struct MintableToken.PledgeVector storage ref"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "index",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 372,
                    "src": "172:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 94,
                  "id": 100,
                  "nodeType": "Return",
                  "src": "165:31:1"
                }
              ]
            },
            "id": 102,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getPledgeIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "123:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "151:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "150:9:1"
            },
            "scope": 138,
            "src": "100:101:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "263:82:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 107,
                            "name": "pledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 380,
                            "src": "276:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$376_storage_$",
                              "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                            }
                          },
                          "id": 110,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 108,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "283:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "283:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "276:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PledgeVector_$376_storage",
                            "typeString": "struct MintableToken.PledgeVector storage ref"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vect",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 375,
                        "src": "276:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PledgeData_$370_storage_$dyn_storage",
                          "typeString": "struct MintableToken.PledgeData storage ref[] storage ref"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 112,
                                "name": "pledge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 380,
                                "src": "300:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$376_storage_$",
                                  "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                                }
                              },
                              "id": 115,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 113,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "307:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "307:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "300:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PledgeVector_$376_storage",
                                "typeString": "struct MintableToken.PledgeVector storage ref"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vect",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 375,
                            "src": "300:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PledgeData_$370_storage_$dyn_storage",
                              "typeString": "struct MintableToken.PledgeData storage ref[] storage ref"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "300:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "331:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "300:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "276:57:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PledgeData_$370_storage",
                        "typeString": "struct MintableToken.PledgeData storage ref"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 369,
                    "src": "276:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 106,
                  "id": 122,
                  "nodeType": "Return",
                  "src": "269:71:1"
                }
              ]
            },
            "id": 124,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getLastAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "227:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "255:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "254:9:1"
            },
            "scope": 138,
            "src": "205:140:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "414:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "pledge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 380,
                          "src": "427:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$376_storage_$",
                            "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                          }
                        },
                        "id": 132,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 130,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 891,
                            "src": "434:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "434:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "427:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PledgeVector_$376_storage",
                          "typeString": "struct MintableToken.PledgeVector storage ref"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 375,
                      "src": "427:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PledgeData_$370_storage_$dyn_storage",
                        "typeString": "struct MintableToken.PledgeData storage ref[] storage ref"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "427:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 128,
                  "id": 135,
                  "nodeType": "Return",
                  "src": "420:37:1"
                }
              ]
            },
            "id": 137,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getLastElementNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "378:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "406:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "405:9:1"
            },
            "scope": 138,
            "src": "349:113:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 139,
        "src": "54:411:1"
      }
    ],
    "src": "0:465:1"
  },
  "legacyAST": {
    "absolutePath": "/home/satchel/INK/contracts/ContractForTest.sol",
    "exportedSymbols": {
      "ContractForTest": [
        138
      ]
    },
    "id": 139,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 87,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/home/satchel/INK/contracts/INKToken.sol",
        "file": "./INKToken.sol",
        "id": 88,
        "nodeType": "ImportDirective",
        "scope": 139,
        "sourceUnit": 322,
        "src": "27:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 89,
              "name": "INKToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 321,
              "src": "82:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INKToken_$321",
                "typeString": "contract INKToken"
              }
            },
            "id": 90,
            "nodeType": "InheritanceSpecifier",
            "src": "82:8:1"
          }
        ],
        "contractDependencies": [
          85,
          181,
          210,
          321,
          343,
          532,
          879
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 138,
        "linearizedBaseContracts": [
          138,
          321,
          532,
          343,
          879,
          85,
          181,
          210
        ],
        "name": "ContractForTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "159:42:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "pledge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "172:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$376_storage_$",
                          "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                        }
                      },
                      "id": 98,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 96,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "179:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "179:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "172:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PledgeVector_$376_storage",
                        "typeString": "struct MintableToken.PledgeVector storage ref"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "index",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 372,
                    "src": "172:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 94,
                  "id": 100,
                  "nodeType": "Return",
                  "src": "165:31:1"
                }
              ]
            },
            "id": 102,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getPledgeIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "123:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "151:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "150:9:1"
            },
            "scope": 138,
            "src": "100:101:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "263:82:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 107,
                            "name": "pledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 380,
                            "src": "276:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$376_storage_$",
                              "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                            }
                          },
                          "id": 110,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 108,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "283:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "283:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "276:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PledgeVector_$376_storage",
                            "typeString": "struct MintableToken.PledgeVector storage ref"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vect",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 375,
                        "src": "276:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PledgeData_$370_storage_$dyn_storage",
                          "typeString": "struct MintableToken.PledgeData storage ref[] storage ref"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 112,
                                "name": "pledge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 380,
                                "src": "300:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$376_storage_$",
                                  "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                                }
                              },
                              "id": 115,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 113,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 891,
                                  "src": "307:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "307:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "300:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PledgeVector_$376_storage",
                                "typeString": "struct MintableToken.PledgeVector storage ref"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vect",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 375,
                            "src": "300:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PledgeData_$370_storage_$dyn_storage",
                              "typeString": "struct MintableToken.PledgeData storage ref[] storage ref"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "300:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "331:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "300:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "276:57:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PledgeData_$370_storage",
                        "typeString": "struct MintableToken.PledgeData storage ref"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 369,
                    "src": "276:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 106,
                  "id": 122,
                  "nodeType": "Return",
                  "src": "269:71:1"
                }
              ]
            },
            "id": 124,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getLastAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "227:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "255:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "254:9:1"
            },
            "scope": 138,
            "src": "205:140:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "414:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "pledge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 380,
                          "src": "427:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$376_storage_$",
                            "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                          }
                        },
                        "id": 132,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 130,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 891,
                            "src": "434:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "434:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "427:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PledgeVector_$376_storage",
                          "typeString": "struct MintableToken.PledgeVector storage ref"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 375,
                      "src": "427:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PledgeData_$370_storage_$dyn_storage",
                        "typeString": "struct MintableToken.PledgeData storage ref[] storage ref"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "427:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 128,
                  "id": 135,
                  "nodeType": "Return",
                  "src": "420:37:1"
                }
              ]
            },
            "id": 137,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getLastElementNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "378:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "406:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "405:9:1"
            },
            "scope": 138,
            "src": "349:113:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 139,
        "src": "54:411:1"
      }
    ],
    "src": "0:465:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {
    "1521534819478": {
      "events": {},
      "links": {},
      "address": "0xb3920f3354ac658a86360ba8d1e925e6c1b3b16a",
      "transactionHash": "0x720a772bdeba21911b553a6150c069496307a801c7bf8f3eb7b5b736c4f4e52d"
    },
    "1521630409601": {
      "events": {},
      "links": {},
      "address": "0xddcc9f12368601811faf05ea78d1961f8b71eddb",
      "transactionHash": "0xb300cc16ec2fbbb71f69130d70944a245720f86c3bc9d82cc56d9c29f8bf7d0a"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-03-21T11:28:01.454Z"
}