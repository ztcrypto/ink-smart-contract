{
  "contractName": "INKTokenForTest",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "returnCoins",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "changeManager",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "Obtain",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Return",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousManager",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPledgeIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastElementNumber",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x606060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461010c578063086a2c381461019a578063095ea7b3146101c357806318160ddd1461021d57806323b872dd146102465780632dfa38e5146102bf578063313ce567146102e8578063481c6a751461031d57806354fd4d5014610372578063661884631461040057806370a082311461045a5780637e186f00146104a757806395d89b41146104d05780639b56cd8b1461055e578063a3fbbaae1461058b578063a9059cbb146105c4578063d0febe4c1461061e578063d73dd62314610628578063dd62ed3e14610682575b600080fd5b341561011757600080fd5b61011f6106ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015f578082015181840152602081019050610144565b50505050905090810190601f16801561018c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101a557600080fd5b6101ad61078c565b6040518082815260200191505060405180910390f35b34156101ce57600080fd5b610203600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506107d9565b604051808215151515815260200191505060405180910390f35b341561022857600080fd5b6102306108cb565b6040518082815260200191505060405180910390f35b341561025157600080fd5b6102a5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506108d1565b604051808215151515815260200191505060405180910390f35b34156102ca57600080fd5b6102d2610c90565b6040518082815260200191505060405180910390f35b34156102f357600080fd5b6102fb610d40565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b341561032857600080fd5b610330610d56565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561037d57600080fd5b610385610d7c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103c55780820151818401526020810190506103aa565b50505050905090810190601f1680156103f25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561040b57600080fd5b610440600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610e1a565b604051808215151515815260200191505060405180910390f35b341561046557600080fd5b610491600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110ab565b6040518082815260200191505060405180910390f35b34156104b257600080fd5b6104ba6110f4565b6040518082815260200191505060405180910390f35b34156104db57600080fd5b6104e361113e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610523578082015181840152602081019050610508565b50505050905090810190601f1680156105505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561056957600080fd5b6105716111dc565b604051808215151515815260200191505060405180910390f35b341561059657600080fd5b6105c2600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ec565b005b34156105cf57600080fd5b610604600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506113b0565b604051808215151515815260200191505060405180910390f35b6106266115d4565b005b341561063357600080fd5b610668600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506115fe565b604051808215151515815260200191505060405180910390f35b341561068d57600080fd5b6106d8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506117fa565b6040518082815260200191505060405180910390f35b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107845780601f1061075957610100808354040283529160200191610784565b820191906000526020600020905b81548152906001019060200180831161076757829003601f168201915b505050505081565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050905090565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60005481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561090e57600080fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561095c57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156109e757600080fd5b610a3982600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461188190919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ace82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461189a90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ba082600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461188190919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905003815481101515610d2957fe5b906000526020600020906002020160010154905090565b600860009054906101000a900463ffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e125780601f10610de757610100808354040283529160200191610e12565b820191906000526020600020905b815481529060010190602001808311610df557829003601f168201915b505050505081565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610f2b576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fbf565b610f3e838261188190919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111d45780601f106111a9576101008083540402835291602001916111d4565b820191906000526020600020905b8154815290600101906020018083116111b757829003601f168201915b505050505081565b60006111e7336118b8565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561124857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561128457600080fd5b6112ef8160016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113b0565b508073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a435060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156113ed57600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561143b57600080fd5b61148d82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461188190919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061152282600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461189a90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6115fb33600860009054906101000a900463ffffffff16600a0a63ffffffff163402611be3565b50565b600061168f82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461189a90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115151561188f57fe5b818303905092915050565b60008082840190508381101515156118ae57fe5b8091505092915050565b6000806000809150600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490505b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050811015611bd957426202a300600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101838154811015156119a757fe5b906000526020600020906002020160000154011015611bc7578373ffffffffffffffffffffffffffffffffffffffff166108fc600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010183815481101515611a2957fe5b9060005260206000209060020201600101549081150290604051600060405180830381858888f1935050505050600191508373ffffffffffffffffffffffffffffffffffffffff167f856f08fd8b1f8120c97ade66df997556a2bb7bf9fc1317edc99188d8585af9eb600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010183815481101515611ae157fe5b9060005260206000209060020201600101546040518082815260200191505060405180910390a2600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181815481101515611b5757fe5b90600052602060002090600202016000808201600090556001820160009055505060018101600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550611bcc565b611bd9565b8080600101915050611906565b8192505050919050565b6000808214151515611bf457600080fd5b611c688260016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461188190919063ffffffff16565b60016000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d1f82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461189a90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054806001018281611db69190611e57565b91600052602060002090600202016000604080519081016040528042815260200134815250909190915060008201518160000155602082015181600101555050508273ffffffffffffffffffffffffffffffffffffffff167f71a647ee6065fdd15b432c1a137ccc66bb52fce997830e09eb6db027618277db8342604051808381526020018281526020019250505060405180910390a26001905092915050565b815481835581811511611e8457600202816002028360005260206000209182019101611e839190611e89565b5b505050565b611eb591905b80821115611eb157600080820160009055600182016000905550600201611e8f565b5090565b905600a165627a7a72305820b43b1c35334f16991be852f493c402094626a157644844940b85d69aeab02db20029",
  "sourceMap": "60:411:1:-;;;239:18:5;;;;;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;:::i;:::-;;267:14;;;;;;;;;;;;;;;;;;:6;:14;;;;;;;;;;;;:::i;:::-;;291:15;;;;;;;;;;;;;;;;;;:7;:15;;;;;;;;;;;;:::i;:::-;;327:1;316:8;;:12;;;;;;;;;;;;;;;;;;352:10;338:11;:24;;;;382:10;372:7;;:20;;;;;;;;;;;;;;;;;;422:11;;402:8;:17;411:7;;;;;;;;;;;402:17;;;;;;;;;;;;;;;:31;;;;60:411:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "60:411:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1687:8:9;;;101:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;355:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:187:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;178:444:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;211:140:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;181:22:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47::6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;153:21:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1241:408:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;514:105:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;106:101:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;126:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;562:90:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;189:320:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;450:106:5;;;;;;968:268:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;101:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;355:113:1:-;412:7;433:6;:18;440:10;433:18;;;;;;;;;;;;;;;:23;;:30;;;;426:37;;355:113;:::o;628:187:9:-;695:4;740:6;708:7;:19;716:10;708:19;;;;;;;;;;;;;;;:29;728:8;708:29;;;;;;;;;;;;;;;:38;;;;774:8;753:38;;762:10;753:38;;;784:6;753:38;;;;;;;;;;;;;;;;;;805:4;798:11;;628:187;;;;:::o;51:26:4:-;;;;:::o;178:444:9:-;260:4;295:1;280:17;;:3;:17;;;;272:26;;;;;;;;322:8;:15;331:5;322:15;;;;;;;;;;;;;;;;312:6;:25;;304:34;;;;;;;;362:7;:14;370:5;362:14;;;;;;;;;;;;;;;:26;377:10;362:26;;;;;;;;;;;;;;;;352:6;:36;;344:45;;;;;;;;414:27;434:6;414:8;:15;423:5;414:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;396:8;:15;405:5;396:15;;;;;;;;;;;;;;;:45;;;;464:25;482:6;464:8;:13;473:3;464:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;448:8;:13;457:3;448:13;;;;;;;;;;;;;;;:41;;;;525:38;556:6;525:7;:14;533:5;525:14;;;;;;;;;;;;;;;:26;540:10;525:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;496:7;:14;504:5;496:14;;;;;;;;;;;;;;;:26;511:10;496:26;;;;;;;;;;;;;;;:67;;;;586:3;570:28;;579:5;570:28;;;591:6;570:28;;;;;;;;;;;;;;;;;;612:4;605:11;;178:444;;;;;:::o;211:140:1:-;261:7;282:6;:18;289:10;282:18;;;;;;;;;;;;;;;:23;;337:1;306:6;:18;313:10;306:18;;;;;;;;;;;;;;;:23;;:30;;;;:32;282:57;;;;;;;;;;;;;;;;;;;;:64;;;275:71;;211:140;:::o;181:22:5:-;;;;;;;;;;;;;:::o;47::6:-;;;;;;;;;;;;;:::o;153:21:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1241:408:9:-;1325:12;1345:13;1361:7;:19;1369:10;1361:19;;;;;;;;;;;;;;;:29;1381:8;1361:29;;;;;;;;;;;;;;;;1345:45;;1420:8;1401:16;:27;1397:164;;;1470:1;1438:7;:19;1446:10;1438:19;;;;;;;;;;;;;;;:29;1458:8;1438:29;;;;;;;;;;;;;;;:33;;;;1397:164;;;1524:30;1537:16;1524:8;:12;;:30;;;;:::i;:::-;1492:7;:19;1500:10;1492:19;;;;;;;;;;;;;;;:29;1512:8;1492:29;;;;;;;;;;;;;;;:62;;;;1397:164;1587:8;1566:61;;1575:10;1566:61;;;1597:7;:19;1605:10;1597:19;;;;;;;;;;;;;;;:29;1617:8;1597:29;;;;;;;;;;;;;;;;1566:61;;;;;;;;;;;;;;;;;;1640:4;1633:11;;1241:408;;;;;:::o;514:105:2:-;574:7;597:8;:16;606:6;597:16;;;;;;;;;;;;;;;;590:23;;514:105;;;:::o;106:101:1:-;157:7;178:6;:18;185:10;178:18;;;;;;;;;;;;;;;:24;;;171:31;;106:101;:::o;126:20:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;562:90::-;601:4;623:22;634:10;623;:22::i;:::-;616:29;;562:90;:::o;658:228::-;213:7:6;;;;;;;;;;;199:21;;:10;:21;;;191:30;;;;;;;;758:1:5;736:24;;:10;:24;;;;728:33;;;;;;;;769:39;778:10;790:8;:17;799:7;;;;;;;;;;;790:17;;;;;;;;;;;;;;;;769:8;:39::i;:::-;;840:10;816:35;;831:7;;;;;;;;;;;816:35;;;;;;;;;;;;869:10;859:7;;:20;;;;;;;;;;;;;;;;;;658:228;:::o;189:320:2:-;252:4;287:1;272:17;;:3;:17;;;;264:26;;;;;;;;314:8;:20;323:10;314:20;;;;;;;;;;;;;;;;304:6;:30;;296:39;;;;;;;;365:32;390:6;365:8;:20;374:10;365:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;342:8;:20;351:10;342:20;;;;;;;;;;;;;;;:55;;;;420:25;438:6;420:8;:13;429:3;420:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;404:8;:13;413:3;404:13;;;;;;;;;;;;;;;:41;;;;473:3;452:33;;461:10;452:33;;;478:6;452:33;;;;;;;;;;;;;;;;;;499:4;492:11;;189:320;;;;:::o;450:106:5:-;498:51;514:10;540:8;;;;;;;;;;;536:2;:12;526:22;;:9;:22;498:15;:51::i;:::-;;450:106::o;968:268:9:-;1047:12;1099:46;1133:11;1099:7;:19;1107:10;1099:19;;;;;;;;;;;;;;;:29;1119:8;1099:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;1067:7;:19;1075:10;1067:19;;;;;;;;;;;;;;;:29;1087:8;1067:29;;;;;;;;;;;;;;;:78;;;;1172:8;1151:61;;1160:10;1151:61;;;1182:7;:19;1190:10;1182:19;;;;;;;;;;;;;;;:29;1202:8;1182:29;;;;;;;;;;;;;;;;1151:61;;;;;;;;;;;;;;;;;;1226:4;1219:11;;968:268;;;;:::o;820:142::-;898:17;931:7;:15;939:6;931:15;;;;;;;;;;;;;;;:25;947:8;931:25;;;;;;;;;;;;;;;;924:32;;820:142;;;;:::o;310:112:8:-;368:7;395:1;390;:6;;383:14;;;;;;415:1;411;:5;404:12;;310:112;;;;:::o;429:126::-;487:7;503:9;519:1;515;:5;503:17;;534:1;529;:6;;522:14;;;;;;549:1;542:8;;429:126;;;;;:::o;793:551:7:-;849:4;861:11;890:9;875:5;861:19;;902:6;:16;909:8;902:16;;;;;;;;;;;;;;;:22;;;890:34;;886:435;930:6;:16;937:8;930:16;;;;;;;;;;;;;;;:21;;:28;;;;926:1;:32;886:435;;;1018:3;1009:6;977;:16;984:8;977:16;;;;;;;;;;;;;;;:21;;999:1;977:24;;;;;;;;;;;;;;;;;;;;:29;;;:38;:44;974:341;;;1036:8;:13;;:46;1050:6;:16;1057:8;1050:16;;;;;;;;;;;;;;;:21;;1072:1;1050:24;;;;;;;;;;;;;;;;;;;;:31;;;1036:46;;;;;;;;;;;;;;;;;;;;;;;;1105:4;1096:13;;1130:8;1123:48;;;1139:6;:16;1146:8;1139:16;;;;;;;;;;;;;;;:21;;1161:1;1139:24;;;;;;;;;;;;;;;;;;;;:31;;;1123:48;;;;;;;;;;;;;;;;;;1192:6;:16;1199:8;1192:16;;;;;;;;;;;;;;;:21;;1214:1;1192:24;;;;;;;;;;;;;;;;;;;;;1185:31;;;;;;;;;;;;;;1259:1;1255;:5;1230:6;:16;1237:8;1230:16;;;;;;;;;;;;;;;:22;;:30;;;;974:341;;;1299:5;;974:341;960:3;;;;;;;886:435;;;1333:6;1326:13;;793:551;;;;;:::o;446:341::-;519:4;550:1;539:7;:12;;531:21;;;;;;;;578:30;600:7;578:8;:17;587:7;;;;;;;;;;;578:17;;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;558:8;:17;567:7;;;;;;;;;;;558:17;;;;;;;;;;;;;;;:50;;;;630:26;648:7;630:8;:13;639:3;630:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;614:8;:13;623:3;614:13;;;;;;;;;;;;;;;:42;;;;662:6;:18;669:10;662:18;;;;;;;;;;;;;;;:23;;:72;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;691:42;;;;;;;;;709:3;691:42;;;;722:9;691:42;;;662:72;;;;;;;;;;;;;;;;;;;;;;;;747:3;740:25;;;752:7;761:3;740:25;;;;;;;;;;;;;;;;;;;;;;;;778:4;771:11;;446:341;;;;:::o;60:411:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\n\nimport \"./token/INKToken.sol\";\n\n\ncontract INKTokenForTest is INKToken {\n    \n  function getPledgeIndex() public constant returns (uint256){\n    return pledge[msg.sender].index;\n  }\n\n  function getLastAmount() public constant returns (uint256){\n    return pledge[msg.sender].vect[pledge[msg.sender].vect.length-1].amount;\n  }\n\n  function getLastElementNumber() public constant returns (uint256){\n    return pledge[msg.sender].vect.length;\n  }\n\n}",
  "sourcePath": "/home/satchel/INK/contracts/INKTokenForTest.sol",
  "ast": {
    "absolutePath": "/home/satchel/INK/contracts/INKTokenForTest.sol",
    "exportedSymbols": {
      "INKTokenForTest": [
        76
      ]
    },
    "id": 77,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 25,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/home/satchel/INK/contracts/token/INKToken.sol",
        "file": "./token/INKToken.sol",
        "id": 26,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 346,
        "src": "27:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 27,
              "name": "INKToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 345,
              "src": "88:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INKToken_$345",
                "typeString": "contract INKToken"
              }
            },
            "id": 28,
            "nodeType": "InheritanceSpecifier",
            "src": "88:8:1"
          }
        ],
        "contractDependencies": [
          162,
          205,
          234,
          345,
          367,
          556,
          903
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 76,
        "linearizedBaseContracts": [
          76,
          345,
          556,
          367,
          903,
          162,
          205,
          234
        ],
        "name": "INKTokenForTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "165:42:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "pledge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "178:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$400_storage_$",
                          "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                        }
                      },
                      "id": 36,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 34,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "185:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "185:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "178:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PledgeVector_$400_storage",
                        "typeString": "struct MintableToken.PledgeVector storage ref"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "index",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 396,
                    "src": "178:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 32,
                  "id": 38,
                  "nodeType": "Return",
                  "src": "171:31:1"
                }
              ]
            },
            "id": 40,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getPledgeIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "129:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "157:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "156:9:1"
            },
            "scope": 76,
            "src": "106:101:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "269:82:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "pledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 404,
                            "src": "282:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$400_storage_$",
                              "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                            }
                          },
                          "id": 48,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 46,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "289:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "289:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "282:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PledgeVector_$400_storage",
                            "typeString": "struct MintableToken.PledgeVector storage ref"
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vect",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 399,
                        "src": "282:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PledgeData_$394_storage_$dyn_storage",
                          "typeString": "struct MintableToken.PledgeData storage ref[] storage ref"
                        }
                      },
                      "id": 58,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 50,
                                "name": "pledge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 404,
                                "src": "306:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$400_storage_$",
                                  "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                                }
                              },
                              "id": 53,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 51,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 915,
                                  "src": "313:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "313:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "306:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PledgeVector_$400_storage",
                                "typeString": "struct MintableToken.PledgeVector storage ref"
                              }
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vect",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 399,
                            "src": "306:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PledgeData_$394_storage_$dyn_storage",
                              "typeString": "struct MintableToken.PledgeData storage ref[] storage ref"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "306:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "337:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "306:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "282:57:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PledgeData_$394_storage",
                        "typeString": "struct MintableToken.PledgeData storage ref"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 393,
                    "src": "282:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 44,
                  "id": 60,
                  "nodeType": "Return",
                  "src": "275:71:1"
                }
              ]
            },
            "id": 62,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getLastAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "233:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "261:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "260:9:1"
            },
            "scope": 76,
            "src": "211:140:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "420:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 67,
                          "name": "pledge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "433:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$400_storage_$",
                            "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                          }
                        },
                        "id": 70,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "440:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "440:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "433:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PledgeVector_$400_storage",
                          "typeString": "struct MintableToken.PledgeVector storage ref"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 399,
                      "src": "433:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PledgeData_$394_storage_$dyn_storage",
                        "typeString": "struct MintableToken.PledgeData storage ref[] storage ref"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "433:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 66,
                  "id": 73,
                  "nodeType": "Return",
                  "src": "426:37:1"
                }
              ]
            },
            "id": 75,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getLastElementNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "412:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "411:9:1"
            },
            "scope": 76,
            "src": "355:113:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 77,
        "src": "60:411:1"
      }
    ],
    "src": "0:471:1"
  },
  "legacyAST": {
    "absolutePath": "/home/satchel/INK/contracts/INKTokenForTest.sol",
    "exportedSymbols": {
      "INKTokenForTest": [
        76
      ]
    },
    "id": 77,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 25,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/home/satchel/INK/contracts/token/INKToken.sol",
        "file": "./token/INKToken.sol",
        "id": 26,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 346,
        "src": "27:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 27,
              "name": "INKToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 345,
              "src": "88:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INKToken_$345",
                "typeString": "contract INKToken"
              }
            },
            "id": 28,
            "nodeType": "InheritanceSpecifier",
            "src": "88:8:1"
          }
        ],
        "contractDependencies": [
          162,
          205,
          234,
          345,
          367,
          556,
          903
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 76,
        "linearizedBaseContracts": [
          76,
          345,
          556,
          367,
          903,
          162,
          205,
          234
        ],
        "name": "INKTokenForTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "165:42:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "pledge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "178:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$400_storage_$",
                          "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                        }
                      },
                      "id": 36,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 34,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "185:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "185:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "178:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PledgeVector_$400_storage",
                        "typeString": "struct MintableToken.PledgeVector storage ref"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "index",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 396,
                    "src": "178:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 32,
                  "id": 38,
                  "nodeType": "Return",
                  "src": "171:31:1"
                }
              ]
            },
            "id": 40,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getPledgeIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "129:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "157:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "156:9:1"
            },
            "scope": 76,
            "src": "106:101:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "269:82:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "pledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 404,
                            "src": "282:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$400_storage_$",
                              "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                            }
                          },
                          "id": 48,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 46,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "289:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "289:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "282:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PledgeVector_$400_storage",
                            "typeString": "struct MintableToken.PledgeVector storage ref"
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vect",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 399,
                        "src": "282:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PledgeData_$394_storage_$dyn_storage",
                          "typeString": "struct MintableToken.PledgeData storage ref[] storage ref"
                        }
                      },
                      "id": 58,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 50,
                                "name": "pledge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 404,
                                "src": "306:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$400_storage_$",
                                  "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                                }
                              },
                              "id": 53,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 51,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 915,
                                  "src": "313:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "313:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "306:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PledgeVector_$400_storage",
                                "typeString": "struct MintableToken.PledgeVector storage ref"
                              }
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vect",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 399,
                            "src": "306:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PledgeData_$394_storage_$dyn_storage",
                              "typeString": "struct MintableToken.PledgeData storage ref[] storage ref"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "306:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "337:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "306:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "282:57:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PledgeData_$394_storage",
                        "typeString": "struct MintableToken.PledgeData storage ref"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 393,
                    "src": "282:64:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 44,
                  "id": 60,
                  "nodeType": "Return",
                  "src": "275:71:1"
                }
              ]
            },
            "id": 62,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getLastAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "233:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "261:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "260:9:1"
            },
            "scope": 76,
            "src": "211:140:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "420:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 67,
                          "name": "pledge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "433:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PledgeVector_$400_storage_$",
                            "typeString": "mapping(address => struct MintableToken.PledgeVector storage ref)"
                          }
                        },
                        "id": 70,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "440:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "440:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "433:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PledgeVector_$400_storage",
                          "typeString": "struct MintableToken.PledgeVector storage ref"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 399,
                      "src": "433:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PledgeData_$394_storage_$dyn_storage",
                        "typeString": "struct MintableToken.PledgeData storage ref[] storage ref"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "433:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 66,
                  "id": 73,
                  "nodeType": "Return",
                  "src": "426:37:1"
                }
              ]
            },
            "id": 75,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getLastElementNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "384:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "412:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "411:9:1"
            },
            "scope": 76,
            "src": "355:113:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 77,
        "src": "60:411:1"
      }
    ],
    "src": "0:471:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {
    "1521638213933": {
      "events": {},
      "links": {},
      "address": "0x54b717fa04fea84f0926c3a45d88a3bad9818050",
      "transactionHash": "0xe5091b936bf29656e6ea4c8b5c30f313eff67325b9a0a32837c351b9fd97b309"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-03-21T13:46:32.830Z"
}